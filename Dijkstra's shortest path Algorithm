The Dijkstra algorithm is also known as the single-source shortest path algorithm. It is based on the greedy technique. A little variation in the algorithm can find the shortest path from the source nodes to all the other nodes in the graph.

#include <limits.h> 
#include <stdio.h>
#define MAX 20
int V, E;
int graph[MAX][MAX];
#define INFINITY 99999

void dijkstra(int G[MAX][MAX], int n, int startnode) {

	int cost[MAX][MAX];
	int distance[MAX], visited[MAX], pred[MAX];
	int count, mindistance, nextnode, i, j;
	// write your code here
	for(i=1;i<=n;i++){
		for(j=1;j<=n;j++){
			if(i==j)
				cost[i][j]=0;
			else if(G[i][j]==0)
				cost[i][j]=INFINITY;
			else
				cost[i][j]=G[i][j];
		}
	} 
	for(i=1;i<=n;i++){
		distance[i] = cost[startnode][i];
		pred[i]=startnode;
		visited[i]=0;
	}
	distance[startnode]=0;
		visited[startnode]=1;
	count=1;
	while(count<n){
		mindistance=INFINITY;
		for(i=1;i<=n;i++){
			if(distance[i] < mindistance && !visited[i]){
				mindistance=distance[i];
Reason for late submission
Type reason here
Please enter at least 15 characters

